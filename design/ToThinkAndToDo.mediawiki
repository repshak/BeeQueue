= ToDo =
* Deployment bq.jar
** BQ_HOME
*** establish system wide configuration is in $BQ_HOME/system.json
*** establish host specific directory in $BQ_HOME/hosts/<hostname>/ (set environment in BQ_HOST)
*** save current worker info in BQ_HOST/worker.csv (pid and computer vitals)
** test agent on windows.
* $BQ_HOST/worker.csv
** maintain for worker that running
** shutdown other bq.jar if its already running on this machine on same port and as same user with same home
*** check $BQ_HOST/worker.csv and shut it down if all other workers.
* json visualization 
** modify it to run visualization automatically on all json data pulled on the web
* coordination datasource configuration is in $BQ_HOME/bq-config.json
* DbMapping

== ToThink ==

* Record somewhere that runs are failing on stage, job and message levels
* Host - Architecture - Datastores rules to match host to particular stage
* How job that mark message/job complete, and 
* How to set deadline if that did not happened on time
* Scheduling/Matching logic to assign job to Message

== Done ==
* Deployment bq.jar
** change default port for bq.jar to 7532
** BQ_HOME
*** establish or pickup BQ_HOME ( default to `pwd`/bq-home/ )
*** autodeployment of agent native libraries into $BQ_HOME/web/WEB-INF/lib
*** autodeployment web application $BQ_HOME/web/
* json visualization 
** copy page with all dependencies from http://chris.photobooks.com/json/default.htm
* Agent
** test agent on mac.
* deploy schema to derby
* stand alone derby script
* simplify db schema for faster develpoment
* Add names in msg/job/stage to minimize joins
* Add domain_cd into NN_MESSAGE
* Enums: 
** RunState 
** StageState
** JobState
** DomainState
** AlertLevel
** MessageState