package beequeue.db.schema;

import java.util.List;

import wakeup.data.piles.LazyList;
import wakeup.orm.sql.mapping.DataType;
import wakeup.orm.sql.mapping.DataTypes;
import wakeup.orm.sql.mapping.EnumType;
import wakeup.orm.sql.mapping.FieldMap;
import wakeup.orm.sql.mapping.Fields;
import wakeup.orm.sql.mapping.FieldSet;
import wakeup.orm.sql.mapping.TableMap;

public class ${table.name} extends TableMap {

  public static final Class<?> CLASS = Object.class;
  
  public static final String TABLE_NAME = "${table.name}";
  // primary key
<% for( field in table.fields ) { %>  public static final FieldMap<${field.javatype}> ${field.name};
<% } %>  
  public static List<FieldMap> FIELDS = new LazyList<FieldMap>(
<% def it = table.fields.iterator(); 
while( it.hasNext() ) { 
  def field = it.next(); 
  def comma = it.hasNext() ? "," : "" ; 
%>      ${field.name} =
      new FieldMap<${field.javatype}>        (TABLE_NAME, "${field.name}",      "${field.nameVar}",          DataTypes.<%= field.javatype.toUpperCase() %>,       ${field.sets} )${comma}
<% } %>  );
  
  
  private ${table.name}() {
    super(TABLE_NAME, CLASS, FIELDS);
  }
  public static final ${table.name} instance = new ${table.name}();
<% for( field in table.fields ) { %>//  ${field.javatype} ${field.nameVar};
<% } %>}